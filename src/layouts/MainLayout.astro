---
interface Props {
  title: string;
}
import "../styles/global.css";
import Header from "@/components/organisms/Header.astro";
import SideMenu from "@/components/organisms/SideMenu";
import logo from "@/assets/logo.png";
import { ViewTransitions } from "astro:transitions";
const { title } = Astro.props;
let pathname = Astro.url.pathname;
let params = Astro.params;
---

<!doctype html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preload" href={logo.src} as="image" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body
    class={`${pathname == "/" && "background_noise dark:background_noise_dark"} dark:text-platinum text-raisinblack dark:bg-dark bg-dark`}
  >
    <div
      class={`${pathname == "/" ? "flex h-screen select-none flex-col justify-center" : "relative flex min-h-screen flex-col justify-between"}`}
    >
      {
        pathname != "/" && (
          <a
            href="/"
            class="fixed left-[28px] invisible laptop:visible w-20 tablet:w-[5.5rem] z-50"
          >
            <img
              src={logo.src}
              class="w-20 tablet:w-[4.4rem]  drop-shadow-md transition-opacity-1 "
              alt="caracol"
            />
          </a>
        )
      }
      {
        pathname == "/" ? (
          <slot />
        ) : (
          <div>
            <Header />
            <div class="tablet:pb-[5.9rem] tablet:w-[97vw] w-[95vw]  pb-[7rem]">
              <div class="tablet:h-[5.9rem] top-0 h-20 " />
              <div class="laptop:pl-[29vw] desktop:pl-[24rem]  tablet:w-[82.6%] laptop:w-[90%] desktop:w-[94%] desktop:max-w-[100rem] mx-auto laptop:ml-[2%] desktop:ml-[1%] widescreen:ml-[2%] fullhd:mx-auto flex w-[89%] justify-center">
                <slot />
                <SideMenu client:load />
              </div>
            </div>
          </div>
        )
      }
    </div>
    <script is:inline>
      // Necessary for view transitions
      document.addEventListener("astro:after-swap", () => {
        if (
          localStorage.theme === "dark" ||
          (!("theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          document.documentElement.classList.add("dark");
        }
      });
      if (
        localStorage.theme === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
  </body>
</html>
